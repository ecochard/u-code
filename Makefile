# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  ucode_config = debug
  math_config = debug
  engine_config = debug

else ifeq ($(config),release)
  ucode_config = release
  math_config = release
  engine_config = release

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := ucode math engine

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

ucode: engine math
ifneq (,$(ucode_config))
	@echo "==== Building ucode ($(ucode_config)) ===="
	@${MAKE} --no-print-directory -C . -f ucode.make config=$(ucode_config)
endif

math: engine
ifneq (,$(math_config))
	@echo "==== Building math ($(math_config)) ===="
	@${MAKE} --no-print-directory -C . -f math.make config=$(math_config)
endif

engine:
ifneq (,$(engine_config))
	@echo "==== Building engine ($(engine_config)) ===="
	@${MAKE} --no-print-directory -C . -f engine.make config=$(engine_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f ucode.make clean
	@${MAKE} --no-print-directory -C . -f math.make clean
	@${MAKE} --no-print-directory -C . -f engine.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   ucode"
	@echo "   math"
	@echo "   engine"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"